# Default values for teddit.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: docker.io/teddit/teddit 
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: "teddit"
fullnameOverride: "teddit"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  enabled: true
  type: LoadBalancer
  port: 80 
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: teddit

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

env:
  DOMAIN: "teddit.default.heywoodlh.tech"
  REDIS_HOST: "teddit-redis-master"
  NONSSL_PORT: "80"

redis:
  architecture: standalone
  global:
    storageClass: "nfs-client"
    nameOverride: "teddit-redis"
    fullnameOverride: "teddit-redis"
  image:
    repository: bitnami/redis
    pullPolicy: IfNotPresent
    tag: "6.2.6-debian-10-r53"
  master:
    persistence:
      enabled: true
      type: pvc
      mountPath: /data 
      size: 10Gi
      retain: true
  env:
    REDIS_REPLICATION_MODE: "master"
